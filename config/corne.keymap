/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hmlayer: hmlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        hmmod: hmmod {
            compatible = "zmk,behavior-hold-tap";
            label = "HMMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        spacsh: spacsh {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACSH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W           &kp E              &kp R          &kp T                  &kp Y          &kp U          &kp I                  &kp O                        &kp P             &kp BSPC
&kp TAB     &kp A  &kp S           &hmlayer 2 D       &hmlayer 1 F   &kp G                  &kp H          &kp J          &kp K                  &kp L                        &kp SEMI          &kp RET
&kp DEL     &kp Z  &hmmod LCTRL X  &hmmod LEFT_ALT C  &hmmod LGUI V  &kp B                  &kp N          &hmmod LGUI M  &hmmod LEFT_ALT COMMA  &hmmod RIGHT_CONTROL PERIOD  &kp SINGLE_QUOTE  &kp SLASH
                                   &kp LGUI           &mo 1          &spacsh LSHFT SPACE    &kp BACKSPACE  &mo 2          &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1     &kp F2                       &kp F3              &kp F4               &kp F5     &kp F6    &kp F7    &kp F8   &kp F9     &kp F10        &trans
&trans  &kp MINUS  &mt LEFT_CONTROL UNDERSCORE  &mt LEFT_ALT CARET  &mt LGUI LS(DOLLAR)  &trans     &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans         &trans
&trans  &trans     &trans                       &trans              &trans               &kp F11    &kp F12   &kp HOME  &kp END  &kp PG_UP  &kp PAGE_DOWN  &trans
                                                &trans              &trans               &trans     &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp AT     &kp EXCL       &kp LBRC              &kp RBRC               &kp PRCNT    &kp MINUS     &kp N7        &kp N8        &kp N9        &trans     &trans
&trans  &kp MINUS  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI     &kp N0        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL  &trans
&trans  &kp GRAVE  &kp HASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &trans
                                  &trans                &trans                 &trans       &trans        &trans        &trans
            >;
        };

        ADJUST_LAYER {
            bindings = <
&trans  &rgb_ug RGB_ON    &rgb_ug RGB_OFF    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &bl BL_ON         &bl BL_OFF         &bl BL_CYCLE     &kp NUMBER_3     &trans    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR_ALL
&trans  &ext_power EP_ON  &ext_power EP_OFF  &trans           &trans           &trans    &trans        &trans        &trans        &trans        &trans        &trans
                                             &trans           &trans           &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        raiseandlower {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
